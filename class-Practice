class Vehicle {
  constructor(make, model, year) {
    (this.make = make), (this.model = model), (this.year = year);
  }

  honk() {
    return "Beep!";
  }

  toString() {
    const { make, model, year } = this;
    return `The vehicle is a ${make} ${model} from ${year}`;
  }
}

class Car extends Vehicle {
  constructor(make, model, year) {
    super(make, model, year);
    this.numWheels = 4;
  }
}
class Motorcycle extends Vehicle {
  constructor(make, model, year) {
    super(make, model, year);
    this.numWheels = 2;
  }

  revEngine() {
    return "Vroommmm!";
  }
}

class Garage {
  constructor(capacity) {
    (this.capacity = capacity), (this.vehicles = []);
  }

  add(car) {
    if (!(car instanceof Vehicle)) return "Only cars allowed in here";
    if (this.vehicles.length < this.capacity) {
      this.vehicles.push(car);
    } else {
      return "We are full";
    }
  }
}
